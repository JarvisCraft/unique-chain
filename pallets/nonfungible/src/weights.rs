// Template adopted from https://github.com/paritytech/substrate/blob/master/.maintain/frame-weight-template.hbs

//! Autogenerated weights for pallet_nonfungible
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-09-26, STEPS: `50`, REPEAT: `80`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `bench-host`, CPU: `Intel(R) Core(TM) i7-8700 CPU @ 3.20GHz`
//! EXECUTION: None, WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 1024

// Executed Command:
// target/release/unique-collator
// benchmark
// pallet
// --pallet
// pallet-nonfungible
// --wasm-execution
// compiled
// --extrinsic
// *
// --template=.maintain/frame-weight-template.hbs
// --steps=50
// --repeat=80
// --heap-pages=4096
// --output=./pallets/nonfungible/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_nonfungible.
pub trait WeightInfo {
	fn create_item() -> Weight;
	fn create_multiple_items(b: u32, ) -> Weight;
	fn create_multiple_items_ex(b: u32, ) -> Weight;
	fn burn_item() -> Weight;
	fn burn_recursively_self_raw() -> Weight;
	fn burn_recursively_breadth_plus_self_plus_self_per_each_raw(b: u32, ) -> Weight;
	fn transfer_raw() -> Weight;
	fn approve() -> Weight;
	fn approve_from() -> Weight;
	fn check_allowed_raw() -> Weight;
	fn burn_from() -> Weight;
	fn set_token_property_permissions(b: u32, ) -> Weight;
	fn set_token_properties(b: u32, ) -> Weight;
	fn reset_token_properties(b: u32, ) -> Weight;
	fn delete_token_properties(b: u32, ) -> Weight;
	fn token_owner() -> Weight;
	fn set_allowance_for_all() -> Weight;
	fn allowance_for_all() -> Weight;
	fn repair_item() -> Weight;
}

/// Weights for pallet_nonfungible using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: Nonfungible TokensMinted (r:1 w:1)
	/// Proof: Nonfungible TokensMinted (max_values: None, max_size: Some(16), added: 2491, mode: MaxEncodedLen)
	/// Storage: Nonfungible AccountBalance (r:1 w:1)
	/// Proof: Nonfungible AccountBalance (max_values: None, max_size: Some(65), added: 2540, mode: MaxEncodedLen)
	/// Storage: Nonfungible TokenData (r:0 w:1)
	/// Proof: Nonfungible TokenData (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// Storage: Nonfungible Owned (r:0 w:1)
	/// Proof: Nonfungible Owned (max_values: None, max_size: Some(74), added: 2549, mode: MaxEncodedLen)
	fn create_item() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `142`
		//  Estimated: `3530`
		// Minimum execution time: 14_096_000 picoseconds.
		Weight::from_parts(14_490_000, 3530)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: Nonfungible TokensMinted (r:1 w:1)
	/// Proof: Nonfungible TokensMinted (max_values: None, max_size: Some(16), added: 2491, mode: MaxEncodedLen)
	/// Storage: Nonfungible AccountBalance (r:1 w:1)
	/// Proof: Nonfungible AccountBalance (max_values: None, max_size: Some(65), added: 2540, mode: MaxEncodedLen)
	/// Storage: Nonfungible TokenData (r:0 w:200)
	/// Proof: Nonfungible TokenData (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// Storage: Nonfungible Owned (r:0 w:200)
	/// Proof: Nonfungible Owned (max_values: None, max_size: Some(74), added: 2549, mode: MaxEncodedLen)
	/// The range of component `b` is `[0, 200]`.
	fn create_multiple_items(b: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `142`
		//  Estimated: `3530`
		// Minimum execution time: 4_157_000 picoseconds.
		Weight::from_parts(2_679_830, 3530)
			// Standard Error: 3_040
			.saturating_add(Weight::from_parts(4_359_013, 0).saturating_mul(b.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
			.saturating_add(T::DbWeight::get().writes((2_u64).saturating_mul(b.into())))
	}
	/// Storage: Nonfungible TokensMinted (r:1 w:1)
	/// Proof: Nonfungible TokensMinted (max_values: None, max_size: Some(16), added: 2491, mode: MaxEncodedLen)
	/// Storage: Nonfungible AccountBalance (r:200 w:200)
	/// Proof: Nonfungible AccountBalance (max_values: None, max_size: Some(65), added: 2540, mode: MaxEncodedLen)
	/// Storage: Nonfungible TokenData (r:0 w:200)
	/// Proof: Nonfungible TokenData (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// Storage: Nonfungible Owned (r:0 w:200)
	/// Proof: Nonfungible Owned (max_values: None, max_size: Some(74), added: 2549, mode: MaxEncodedLen)
	/// The range of component `b` is `[0, 200]`.
	fn create_multiple_items_ex(b: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `142`
		//  Estimated: `3481 + b * (2540 ±0)`
		// Minimum execution time: 4_271_000 picoseconds.
		Weight::from_parts(4_483_000, 3481)
			// Standard Error: 2_384
			.saturating_add(Weight::from_parts(5_835_967, 0).saturating_mul(b.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(b.into())))
			.saturating_add(T::DbWeight::get().writes(1_u64))
			.saturating_add(T::DbWeight::get().writes((3_u64).saturating_mul(b.into())))
			.saturating_add(Weight::from_parts(0, 2540).saturating_mul(b.into()))
	}
	/// Storage: Nonfungible TokenData (r:1 w:1)
	/// Proof: Nonfungible TokenData (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// Storage: Nonfungible TokenChildren (r:1 w:0)
	/// Proof: Nonfungible TokenChildren (max_values: None, max_size: Some(41), added: 2516, mode: MaxEncodedLen)
	/// Storage: Nonfungible TokensBurnt (r:1 w:1)
	/// Proof: Nonfungible TokensBurnt (max_values: None, max_size: Some(16), added: 2491, mode: MaxEncodedLen)
	/// Storage: Nonfungible AccountBalance (r:1 w:1)
	/// Proof: Nonfungible AccountBalance (max_values: None, max_size: Some(65), added: 2540, mode: MaxEncodedLen)
	/// Storage: Nonfungible Allowance (r:1 w:0)
	/// Proof: Nonfungible Allowance (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// Storage: Nonfungible Owned (r:0 w:1)
	/// Proof: Nonfungible Owned (max_values: None, max_size: Some(74), added: 2549, mode: MaxEncodedLen)
	/// Storage: Nonfungible TokenProperties (r:0 w:1)
	/// Proof: Nonfungible TokenProperties (max_values: None, max_size: Some(32804), added: 35279, mode: MaxEncodedLen)
	fn burn_item() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `380`
		//  Estimated: `3530`
		// Minimum execution time: 23_512_000 picoseconds.
		Weight::from_parts(24_018_000, 3530)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: Nonfungible TokenChildren (r:1 w:0)
	/// Proof: Nonfungible TokenChildren (max_values: None, max_size: Some(41), added: 2516, mode: MaxEncodedLen)
	/// Storage: Nonfungible TokenData (r:1 w:1)
	/// Proof: Nonfungible TokenData (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// Storage: Nonfungible TokensBurnt (r:1 w:1)
	/// Proof: Nonfungible TokensBurnt (max_values: None, max_size: Some(16), added: 2491, mode: MaxEncodedLen)
	/// Storage: Nonfungible AccountBalance (r:1 w:1)
	/// Proof: Nonfungible AccountBalance (max_values: None, max_size: Some(65), added: 2540, mode: MaxEncodedLen)
	/// Storage: Nonfungible Allowance (r:1 w:0)
	/// Proof: Nonfungible Allowance (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// Storage: Nonfungible Owned (r:0 w:1)
	/// Proof: Nonfungible Owned (max_values: None, max_size: Some(74), added: 2549, mode: MaxEncodedLen)
	/// Storage: Nonfungible TokenProperties (r:0 w:1)
	/// Proof: Nonfungible TokenProperties (max_values: None, max_size: Some(32804), added: 35279, mode: MaxEncodedLen)
	fn burn_recursively_self_raw() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `380`
		//  Estimated: `3530`
		// Minimum execution time: 29_808_000 picoseconds.
		Weight::from_parts(30_221_000, 3530)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: Nonfungible TokenChildren (r:401 w:200)
	/// Proof: Nonfungible TokenChildren (max_values: None, max_size: Some(41), added: 2516, mode: MaxEncodedLen)
	/// Storage: Common CollectionById (r:1 w:0)
	/// Proof: Common CollectionById (max_values: None, max_size: Some(860), added: 3335, mode: MaxEncodedLen)
	/// Storage: Nonfungible TokenData (r:201 w:201)
	/// Proof: Nonfungible TokenData (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// Storage: Nonfungible TokensBurnt (r:1 w:1)
	/// Proof: Nonfungible TokensBurnt (max_values: None, max_size: Some(16), added: 2491, mode: MaxEncodedLen)
	/// Storage: Nonfungible AccountBalance (r:2 w:2)
	/// Proof: Nonfungible AccountBalance (max_values: None, max_size: Some(65), added: 2540, mode: MaxEncodedLen)
	/// Storage: Nonfungible Allowance (r:201 w:0)
	/// Proof: Nonfungible Allowance (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// Storage: Nonfungible Owned (r:0 w:201)
	/// Proof: Nonfungible Owned (max_values: None, max_size: Some(74), added: 2549, mode: MaxEncodedLen)
	/// Storage: Nonfungible TokenProperties (r:0 w:201)
	/// Proof: Nonfungible TokenProperties (max_values: None, max_size: Some(32804), added: 35279, mode: MaxEncodedLen)
	/// The range of component `b` is `[0, 200]`.
	fn burn_recursively_breadth_plus_self_plus_self_per_each_raw(b: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1500 + b * (58 ±0)`
		//  Estimated: `5874 + b * (5032 ±0)`
		// Minimum execution time: 29_778_000 picoseconds.
		Weight::from_parts(30_144_000, 5874)
			// Standard Error: 211_038
			.saturating_add(Weight::from_parts(71_816_636, 0).saturating_mul(b.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().reads((4_u64).saturating_mul(b.into())))
			.saturating_add(T::DbWeight::get().writes(6_u64))
			.saturating_add(T::DbWeight::get().writes((4_u64).saturating_mul(b.into())))
			.saturating_add(Weight::from_parts(0, 5032).saturating_mul(b.into()))
	}
	/// Storage: Nonfungible TokenData (r:1 w:1)
	/// Proof: Nonfungible TokenData (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// Storage: Nonfungible AccountBalance (r:2 w:2)
	/// Proof: Nonfungible AccountBalance (max_values: None, max_size: Some(65), added: 2540, mode: MaxEncodedLen)
	/// Storage: Nonfungible Allowance (r:1 w:0)
	/// Proof: Nonfungible Allowance (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// Storage: Nonfungible Owned (r:0 w:2)
	/// Proof: Nonfungible Owned (max_values: None, max_size: Some(74), added: 2549, mode: MaxEncodedLen)
	fn transfer_raw() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `380`
		//  Estimated: `6070`
		// Minimum execution time: 17_854_000 picoseconds.
		Weight::from_parts(18_244_000, 6070)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: Nonfungible TokenData (r:1 w:0)
	/// Proof: Nonfungible TokenData (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// Storage: Nonfungible Allowance (r:1 w:1)
	/// Proof: Nonfungible Allowance (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	fn approve() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `326`
		//  Estimated: `3522`
		// Minimum execution time: 10_545_000 picoseconds.
		Weight::from_parts(10_842_000, 3522)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Nonfungible TokenData (r:1 w:0)
	/// Proof: Nonfungible TokenData (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// Storage: Nonfungible Allowance (r:1 w:1)
	/// Proof: Nonfungible Allowance (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	fn approve_from() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `313`
		//  Estimated: `3522`
		// Minimum execution time: 10_536_000 picoseconds.
		Weight::from_parts(10_811_000, 3522)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Nonfungible Allowance (r:1 w:0)
	/// Proof: Nonfungible Allowance (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	fn check_allowed_raw() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `362`
		//  Estimated: `3522`
		// Minimum execution time: 5_351_000 picoseconds.
		Weight::from_parts(5_501_000, 3522)
			.saturating_add(T::DbWeight::get().reads(1_u64))
	}
	/// Storage: Nonfungible Allowance (r:1 w:1)
	/// Proof: Nonfungible Allowance (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// Storage: Nonfungible TokenData (r:1 w:1)
	/// Proof: Nonfungible TokenData (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// Storage: Nonfungible TokenChildren (r:1 w:0)
	/// Proof: Nonfungible TokenChildren (max_values: None, max_size: Some(41), added: 2516, mode: MaxEncodedLen)
	/// Storage: Nonfungible TokensBurnt (r:1 w:1)
	/// Proof: Nonfungible TokensBurnt (max_values: None, max_size: Some(16), added: 2491, mode: MaxEncodedLen)
	/// Storage: Nonfungible AccountBalance (r:1 w:1)
	/// Proof: Nonfungible AccountBalance (max_values: None, max_size: Some(65), added: 2540, mode: MaxEncodedLen)
	/// Storage: Nonfungible Owned (r:0 w:1)
	/// Proof: Nonfungible Owned (max_values: None, max_size: Some(74), added: 2549, mode: MaxEncodedLen)
	/// Storage: Nonfungible TokenProperties (r:0 w:1)
	/// Proof: Nonfungible TokenProperties (max_values: None, max_size: Some(32804), added: 35279, mode: MaxEncodedLen)
	fn burn_from() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `463`
		//  Estimated: `3530`
		// Minimum execution time: 28_847_000 picoseconds.
		Weight::from_parts(29_327_000, 3530)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	/// Storage: Common CollectionPropertyPermissions (r:1 w:1)
	/// Proof: Common CollectionPropertyPermissions (max_values: None, max_size: Some(16726), added: 19201, mode: MaxEncodedLen)
	/// The range of component `b` is `[0, 64]`.
	fn set_token_property_permissions(b: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `314`
		//  Estimated: `20191`
		// Minimum execution time: 2_006_000 picoseconds.
		Weight::from_parts(2_103_000, 20191)
			// Standard Error: 46_810
			.saturating_add(Weight::from_parts(11_403_774, 0).saturating_mul(b.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Nonfungible TokenProperties (r:1 w:1)
	/// Proof: Nonfungible TokenProperties (max_values: None, max_size: Some(32804), added: 35279, mode: MaxEncodedLen)
	/// Storage: Common CollectionPropertyPermissions (r:1 w:0)
	/// Proof: Common CollectionPropertyPermissions (max_values: None, max_size: Some(16726), added: 19201, mode: MaxEncodedLen)
	/// Storage: Nonfungible TokenData (r:1 w:0)
	/// Proof: Nonfungible TokenData (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// The range of component `b` is `[0, 64]`.
	fn set_token_properties(b: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `640 + b * (261 ±0)`
		//  Estimated: `36269`
		// Minimum execution time: 5_038_000 picoseconds.
		Weight::from_parts(11_734_155, 36269)
			// Standard Error: 13_521
			.saturating_add(Weight::from_parts(5_311_979, 0).saturating_mul(b.into()))
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Common CollectionPropertyPermissions (r:1 w:0)
	/// Proof: Common CollectionPropertyPermissions (max_values: None, max_size: Some(16726), added: 19201, mode: MaxEncodedLen)
	/// Storage: Nonfungible TokenProperties (r:0 w:1)
	/// Proof: Nonfungible TokenProperties (max_values: None, max_size: Some(32804), added: 35279, mode: MaxEncodedLen)
	/// The range of component `b` is `[0, 64]`.
	fn reset_token_properties(b: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `317 + b * (261 ±0)`
		//  Estimated: `20191`
		// Minimum execution time: 1_599_000 picoseconds.
		Weight::from_parts(1_659_000, 20191)
			// Standard Error: 77_681
			.saturating_add(Weight::from_parts(6_883_549, 0).saturating_mul(b.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Nonfungible TokenProperties (r:1 w:1)
	/// Proof: Nonfungible TokenProperties (max_values: None, max_size: Some(32804), added: 35279, mode: MaxEncodedLen)
	/// Storage: Common CollectionPropertyPermissions (r:1 w:0)
	/// Proof: Common CollectionPropertyPermissions (max_values: None, max_size: Some(16726), added: 19201, mode: MaxEncodedLen)
	/// Storage: Nonfungible TokenData (r:1 w:0)
	/// Proof: Nonfungible TokenData (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// The range of component `b` is `[0, 64]`.
	fn delete_token_properties(b: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `699 + b * (33291 ±0)`
		//  Estimated: `36269`
		// Minimum execution time: 4_916_000 picoseconds.
		Weight::from_parts(5_018_000, 36269)
			// Standard Error: 84_636
			.saturating_add(Weight::from_parts(24_588_007, 0).saturating_mul(b.into()))
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Nonfungible TokenData (r:1 w:0)
	/// Proof: Nonfungible TokenData (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	fn token_owner() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `326`
		//  Estimated: `3522`
		// Minimum execution time: 4_667_000 picoseconds.
		Weight::from_parts(4_879_000, 3522)
			.saturating_add(T::DbWeight::get().reads(1_u64))
	}
	/// Storage: Nonfungible CollectionAllowance (r:0 w:1)
	/// Proof: Nonfungible CollectionAllowance (max_values: None, max_size: Some(111), added: 2586, mode: MaxEncodedLen)
	fn set_allowance_for_all() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 6_087_000 picoseconds.
		Weight::from_parts(6_270_000, 0)
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Nonfungible CollectionAllowance (r:1 w:0)
	/// Proof: Nonfungible CollectionAllowance (max_values: None, max_size: Some(111), added: 2586, mode: MaxEncodedLen)
	fn allowance_for_all() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `142`
		//  Estimated: `3576`
		// Minimum execution time: 3_563_000 picoseconds.
		Weight::from_parts(3_683_000, 3576)
			.saturating_add(T::DbWeight::get().reads(1_u64))
	}
	/// Storage: Nonfungible TokenProperties (r:1 w:1)
	/// Proof: Nonfungible TokenProperties (max_values: None, max_size: Some(32804), added: 35279, mode: MaxEncodedLen)
	fn repair_item() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `279`
		//  Estimated: `36269`
		// Minimum execution time: 4_005_000 picoseconds.
		Weight::from_parts(4_191_000, 36269)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	/// Storage: Nonfungible TokensMinted (r:1 w:1)
	/// Proof: Nonfungible TokensMinted (max_values: None, max_size: Some(16), added: 2491, mode: MaxEncodedLen)
	/// Storage: Nonfungible AccountBalance (r:1 w:1)
	/// Proof: Nonfungible AccountBalance (max_values: None, max_size: Some(65), added: 2540, mode: MaxEncodedLen)
	/// Storage: Nonfungible TokenData (r:0 w:1)
	/// Proof: Nonfungible TokenData (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// Storage: Nonfungible Owned (r:0 w:1)
	/// Proof: Nonfungible Owned (max_values: None, max_size: Some(74), added: 2549, mode: MaxEncodedLen)
	fn create_item() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `142`
		//  Estimated: `3530`
		// Minimum execution time: 14_096_000 picoseconds.
		Weight::from_parts(14_490_000, 3530)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: Nonfungible TokensMinted (r:1 w:1)
	/// Proof: Nonfungible TokensMinted (max_values: None, max_size: Some(16), added: 2491, mode: MaxEncodedLen)
	/// Storage: Nonfungible AccountBalance (r:1 w:1)
	/// Proof: Nonfungible AccountBalance (max_values: None, max_size: Some(65), added: 2540, mode: MaxEncodedLen)
	/// Storage: Nonfungible TokenData (r:0 w:200)
	/// Proof: Nonfungible TokenData (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// Storage: Nonfungible Owned (r:0 w:200)
	/// Proof: Nonfungible Owned (max_values: None, max_size: Some(74), added: 2549, mode: MaxEncodedLen)
	/// The range of component `b` is `[0, 200]`.
	fn create_multiple_items(b: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `142`
		//  Estimated: `3530`
		// Minimum execution time: 4_157_000 picoseconds.
		Weight::from_parts(2_679_830, 3530)
			// Standard Error: 3_040
			.saturating_add(Weight::from_parts(4_359_013, 0).saturating_mul(b.into()))
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
			.saturating_add(RocksDbWeight::get().writes((2_u64).saturating_mul(b.into())))
	}
	/// Storage: Nonfungible TokensMinted (r:1 w:1)
	/// Proof: Nonfungible TokensMinted (max_values: None, max_size: Some(16), added: 2491, mode: MaxEncodedLen)
	/// Storage: Nonfungible AccountBalance (r:200 w:200)
	/// Proof: Nonfungible AccountBalance (max_values: None, max_size: Some(65), added: 2540, mode: MaxEncodedLen)
	/// Storage: Nonfungible TokenData (r:0 w:200)
	/// Proof: Nonfungible TokenData (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// Storage: Nonfungible Owned (r:0 w:200)
	/// Proof: Nonfungible Owned (max_values: None, max_size: Some(74), added: 2549, mode: MaxEncodedLen)
	/// The range of component `b` is `[0, 200]`.
	fn create_multiple_items_ex(b: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `142`
		//  Estimated: `3481 + b * (2540 ±0)`
		// Minimum execution time: 4_271_000 picoseconds.
		Weight::from_parts(4_483_000, 3481)
			// Standard Error: 2_384
			.saturating_add(Weight::from_parts(5_835_967, 0).saturating_mul(b.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(b.into())))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
			.saturating_add(RocksDbWeight::get().writes((3_u64).saturating_mul(b.into())))
			.saturating_add(Weight::from_parts(0, 2540).saturating_mul(b.into()))
	}
	/// Storage: Nonfungible TokenData (r:1 w:1)
	/// Proof: Nonfungible TokenData (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// Storage: Nonfungible TokenChildren (r:1 w:0)
	/// Proof: Nonfungible TokenChildren (max_values: None, max_size: Some(41), added: 2516, mode: MaxEncodedLen)
	/// Storage: Nonfungible TokensBurnt (r:1 w:1)
	/// Proof: Nonfungible TokensBurnt (max_values: None, max_size: Some(16), added: 2491, mode: MaxEncodedLen)
	/// Storage: Nonfungible AccountBalance (r:1 w:1)
	/// Proof: Nonfungible AccountBalance (max_values: None, max_size: Some(65), added: 2540, mode: MaxEncodedLen)
	/// Storage: Nonfungible Allowance (r:1 w:0)
	/// Proof: Nonfungible Allowance (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// Storage: Nonfungible Owned (r:0 w:1)
	/// Proof: Nonfungible Owned (max_values: None, max_size: Some(74), added: 2549, mode: MaxEncodedLen)
	/// Storage: Nonfungible TokenProperties (r:0 w:1)
	/// Proof: Nonfungible TokenProperties (max_values: None, max_size: Some(32804), added: 35279, mode: MaxEncodedLen)
	fn burn_item() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `380`
		//  Estimated: `3530`
		// Minimum execution time: 23_512_000 picoseconds.
		Weight::from_parts(24_018_000, 3530)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: Nonfungible TokenChildren (r:1 w:0)
	/// Proof: Nonfungible TokenChildren (max_values: None, max_size: Some(41), added: 2516, mode: MaxEncodedLen)
	/// Storage: Nonfungible TokenData (r:1 w:1)
	/// Proof: Nonfungible TokenData (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// Storage: Nonfungible TokensBurnt (r:1 w:1)
	/// Proof: Nonfungible TokensBurnt (max_values: None, max_size: Some(16), added: 2491, mode: MaxEncodedLen)
	/// Storage: Nonfungible AccountBalance (r:1 w:1)
	/// Proof: Nonfungible AccountBalance (max_values: None, max_size: Some(65), added: 2540, mode: MaxEncodedLen)
	/// Storage: Nonfungible Allowance (r:1 w:0)
	/// Proof: Nonfungible Allowance (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// Storage: Nonfungible Owned (r:0 w:1)
	/// Proof: Nonfungible Owned (max_values: None, max_size: Some(74), added: 2549, mode: MaxEncodedLen)
	/// Storage: Nonfungible TokenProperties (r:0 w:1)
	/// Proof: Nonfungible TokenProperties (max_values: None, max_size: Some(32804), added: 35279, mode: MaxEncodedLen)
	fn burn_recursively_self_raw() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `380`
		//  Estimated: `3530`
		// Minimum execution time: 29_808_000 picoseconds.
		Weight::from_parts(30_221_000, 3530)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: Nonfungible TokenChildren (r:401 w:200)
	/// Proof: Nonfungible TokenChildren (max_values: None, max_size: Some(41), added: 2516, mode: MaxEncodedLen)
	/// Storage: Common CollectionById (r:1 w:0)
	/// Proof: Common CollectionById (max_values: None, max_size: Some(860), added: 3335, mode: MaxEncodedLen)
	/// Storage: Nonfungible TokenData (r:201 w:201)
	/// Proof: Nonfungible TokenData (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// Storage: Nonfungible TokensBurnt (r:1 w:1)
	/// Proof: Nonfungible TokensBurnt (max_values: None, max_size: Some(16), added: 2491, mode: MaxEncodedLen)
	/// Storage: Nonfungible AccountBalance (r:2 w:2)
	/// Proof: Nonfungible AccountBalance (max_values: None, max_size: Some(65), added: 2540, mode: MaxEncodedLen)
	/// Storage: Nonfungible Allowance (r:201 w:0)
	/// Proof: Nonfungible Allowance (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// Storage: Nonfungible Owned (r:0 w:201)
	/// Proof: Nonfungible Owned (max_values: None, max_size: Some(74), added: 2549, mode: MaxEncodedLen)
	/// Storage: Nonfungible TokenProperties (r:0 w:201)
	/// Proof: Nonfungible TokenProperties (max_values: None, max_size: Some(32804), added: 35279, mode: MaxEncodedLen)
	/// The range of component `b` is `[0, 200]`.
	fn burn_recursively_breadth_plus_self_plus_self_per_each_raw(b: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1500 + b * (58 ±0)`
		//  Estimated: `5874 + b * (5032 ±0)`
		// Minimum execution time: 29_778_000 picoseconds.
		Weight::from_parts(30_144_000, 5874)
			// Standard Error: 211_038
			.saturating_add(Weight::from_parts(71_816_636, 0).saturating_mul(b.into()))
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().reads((4_u64).saturating_mul(b.into())))
			.saturating_add(RocksDbWeight::get().writes(6_u64))
			.saturating_add(RocksDbWeight::get().writes((4_u64).saturating_mul(b.into())))
			.saturating_add(Weight::from_parts(0, 5032).saturating_mul(b.into()))
	}
	/// Storage: Nonfungible TokenData (r:1 w:1)
	/// Proof: Nonfungible TokenData (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// Storage: Nonfungible AccountBalance (r:2 w:2)
	/// Proof: Nonfungible AccountBalance (max_values: None, max_size: Some(65), added: 2540, mode: MaxEncodedLen)
	/// Storage: Nonfungible Allowance (r:1 w:0)
	/// Proof: Nonfungible Allowance (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// Storage: Nonfungible Owned (r:0 w:2)
	/// Proof: Nonfungible Owned (max_values: None, max_size: Some(74), added: 2549, mode: MaxEncodedLen)
	fn transfer_raw() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `380`
		//  Estimated: `6070`
		// Minimum execution time: 17_854_000 picoseconds.
		Weight::from_parts(18_244_000, 6070)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: Nonfungible TokenData (r:1 w:0)
	/// Proof: Nonfungible TokenData (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// Storage: Nonfungible Allowance (r:1 w:1)
	/// Proof: Nonfungible Allowance (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	fn approve() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `326`
		//  Estimated: `3522`
		// Minimum execution time: 10_545_000 picoseconds.
		Weight::from_parts(10_842_000, 3522)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Nonfungible TokenData (r:1 w:0)
	/// Proof: Nonfungible TokenData (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// Storage: Nonfungible Allowance (r:1 w:1)
	/// Proof: Nonfungible Allowance (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	fn approve_from() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `313`
		//  Estimated: `3522`
		// Minimum execution time: 10_536_000 picoseconds.
		Weight::from_parts(10_811_000, 3522)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Nonfungible Allowance (r:1 w:0)
	/// Proof: Nonfungible Allowance (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	fn check_allowed_raw() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `362`
		//  Estimated: `3522`
		// Minimum execution time: 5_351_000 picoseconds.
		Weight::from_parts(5_501_000, 3522)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
	}
	/// Storage: Nonfungible Allowance (r:1 w:1)
	/// Proof: Nonfungible Allowance (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// Storage: Nonfungible TokenData (r:1 w:1)
	/// Proof: Nonfungible TokenData (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// Storage: Nonfungible TokenChildren (r:1 w:0)
	/// Proof: Nonfungible TokenChildren (max_values: None, max_size: Some(41), added: 2516, mode: MaxEncodedLen)
	/// Storage: Nonfungible TokensBurnt (r:1 w:1)
	/// Proof: Nonfungible TokensBurnt (max_values: None, max_size: Some(16), added: 2491, mode: MaxEncodedLen)
	/// Storage: Nonfungible AccountBalance (r:1 w:1)
	/// Proof: Nonfungible AccountBalance (max_values: None, max_size: Some(65), added: 2540, mode: MaxEncodedLen)
	/// Storage: Nonfungible Owned (r:0 w:1)
	/// Proof: Nonfungible Owned (max_values: None, max_size: Some(74), added: 2549, mode: MaxEncodedLen)
	/// Storage: Nonfungible TokenProperties (r:0 w:1)
	/// Proof: Nonfungible TokenProperties (max_values: None, max_size: Some(32804), added: 35279, mode: MaxEncodedLen)
	fn burn_from() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `463`
		//  Estimated: `3530`
		// Minimum execution time: 28_847_000 picoseconds.
		Weight::from_parts(29_327_000, 3530)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(6_u64))
	}
	/// Storage: Common CollectionPropertyPermissions (r:1 w:1)
	/// Proof: Common CollectionPropertyPermissions (max_values: None, max_size: Some(16726), added: 19201, mode: MaxEncodedLen)
	/// The range of component `b` is `[0, 64]`.
	fn set_token_property_permissions(b: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `314`
		//  Estimated: `20191`
		// Minimum execution time: 2_006_000 picoseconds.
		Weight::from_parts(2_103_000, 20191)
			// Standard Error: 46_810
			.saturating_add(Weight::from_parts(11_403_774, 0).saturating_mul(b.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Nonfungible TokenProperties (r:1 w:1)
	/// Proof: Nonfungible TokenProperties (max_values: None, max_size: Some(32804), added: 35279, mode: MaxEncodedLen)
	/// Storage: Common CollectionPropertyPermissions (r:1 w:0)
	/// Proof: Common CollectionPropertyPermissions (max_values: None, max_size: Some(16726), added: 19201, mode: MaxEncodedLen)
	/// Storage: Nonfungible TokenData (r:1 w:0)
	/// Proof: Nonfungible TokenData (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// The range of component `b` is `[0, 64]`.
	fn set_token_properties(b: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `640 + b * (261 ±0)`
		//  Estimated: `36269`
		// Minimum execution time: 5_038_000 picoseconds.
		Weight::from_parts(11_734_155, 36269)
			// Standard Error: 13_521
			.saturating_add(Weight::from_parts(5_311_979, 0).saturating_mul(b.into()))
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Common CollectionPropertyPermissions (r:1 w:0)
	/// Proof: Common CollectionPropertyPermissions (max_values: None, max_size: Some(16726), added: 19201, mode: MaxEncodedLen)
	/// Storage: Nonfungible TokenProperties (r:0 w:1)
	/// Proof: Nonfungible TokenProperties (max_values: None, max_size: Some(32804), added: 35279, mode: MaxEncodedLen)
	/// The range of component `b` is `[0, 64]`.
	fn reset_token_properties(b: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `317 + b * (261 ±0)`
		//  Estimated: `20191`
		// Minimum execution time: 1_599_000 picoseconds.
		Weight::from_parts(1_659_000, 20191)
			// Standard Error: 77_681
			.saturating_add(Weight::from_parts(6_883_549, 0).saturating_mul(b.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Nonfungible TokenProperties (r:1 w:1)
	/// Proof: Nonfungible TokenProperties (max_values: None, max_size: Some(32804), added: 35279, mode: MaxEncodedLen)
	/// Storage: Common CollectionPropertyPermissions (r:1 w:0)
	/// Proof: Common CollectionPropertyPermissions (max_values: None, max_size: Some(16726), added: 19201, mode: MaxEncodedLen)
	/// Storage: Nonfungible TokenData (r:1 w:0)
	/// Proof: Nonfungible TokenData (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	/// The range of component `b` is `[0, 64]`.
	fn delete_token_properties(b: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `699 + b * (33291 ±0)`
		//  Estimated: `36269`
		// Minimum execution time: 4_916_000 picoseconds.
		Weight::from_parts(5_018_000, 36269)
			// Standard Error: 84_636
			.saturating_add(Weight::from_parts(24_588_007, 0).saturating_mul(b.into()))
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Nonfungible TokenData (r:1 w:0)
	/// Proof: Nonfungible TokenData (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	fn token_owner() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `326`
		//  Estimated: `3522`
		// Minimum execution time: 4_667_000 picoseconds.
		Weight::from_parts(4_879_000, 3522)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
	}
	/// Storage: Nonfungible CollectionAllowance (r:0 w:1)
	/// Proof: Nonfungible CollectionAllowance (max_values: None, max_size: Some(111), added: 2586, mode: MaxEncodedLen)
	fn set_allowance_for_all() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 6_087_000 picoseconds.
		Weight::from_parts(6_270_000, 0)
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Nonfungible CollectionAllowance (r:1 w:0)
	/// Proof: Nonfungible CollectionAllowance (max_values: None, max_size: Some(111), added: 2586, mode: MaxEncodedLen)
	fn allowance_for_all() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `142`
		//  Estimated: `3576`
		// Minimum execution time: 3_563_000 picoseconds.
		Weight::from_parts(3_683_000, 3576)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
	}
	/// Storage: Nonfungible TokenProperties (r:1 w:1)
	/// Proof: Nonfungible TokenProperties (max_values: None, max_size: Some(32804), added: 35279, mode: MaxEncodedLen)
	fn repair_item() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `279`
		//  Estimated: `36269`
		// Minimum execution time: 4_005_000 picoseconds.
		Weight::from_parts(4_191_000, 36269)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
}

